version:  '3.8'
services:
  database:
    image: postgres:latest
    container_name: "postgres_symfony"
    environment:
      POSTGRES_DB: e-commerce
      #! To definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-1234}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - e-commerce
  php:
    build:
      context: .
      dockerfile: app/docker/php/Dockerfile
    container_name: "php_symfony"
    volumes:
      - './app/:/usr/src/app'
      - ./app/docker/nginx/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./app/docker/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
      - "phpsocket:/var/run/php"
    networks:
      - e-commerce
    restart: on-failure
    user: 1000:1000
  nginx:
    image: nginx:latest
    container_name: "nginx_symfony"
    restart: on-failure
    ports:
      - "8018:80"
    volumes:
      - ./app:/usr/src/app
      - './app/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
      - "phpsocket:/var/run/php"
    depends_on:
      - php
    networks:
      - e-commerce
  react:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: "client_react"
    restart: on-failure
    volumes:
      - './client/:/app'
    networks:
      - e-commerce
    ports:
      - "3000:3000" 
networks:
  e-commerce:
    driver: bridge
volumes:
  phpsocket:
  database_data: